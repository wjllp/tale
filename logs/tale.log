2018-10-07 01:06:12:211 INFO - [ _(:3」∠)_ ] c.b.s.n.NettyServer       | Environment: jdk.version    => 1.8.0_181
2018-10-07 01:06:12:223 INFO - [ _(:3」∠)_ ] c.b.s.n.NettyServer       | Environment: user.dir       => /root/tale
2018-10-07 01:06:12:223 INFO - [ _(:3」∠)_ ] c.b.s.n.NettyServer       | Environment: java.io.tmpdir => /tmp
2018-10-07 01:06:12:223 INFO - [ _(:3」∠)_ ] c.b.s.n.NettyServer       | Environment: user.timezone  => America/New_York
2018-10-07 01:06:12:224 INFO - [ _(:3」∠)_ ] c.b.s.n.NettyServer       | Environment: file.encoding  => UTF-8
2018-10-07 01:06:12:224 INFO - [ _(:3」∠)_ ] c.b.s.n.NettyServer       | Environment: classpath      => /root/tale/resources
2018-10-07 01:06:12:409 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin
2018-10-07 01:06:12:410 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/categories.html
2018-10-07 01:06:12:410 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/feed.xml
2018-10-07 01:06:12:410 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/atom.xml
2018-10-07 01:06:12:410 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/page/new
2018-10-07 01:06:12:410 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/tags
2018-10-07 01:06:12:410 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/article
2018-10-07 01:06:12:411 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/feed
2018-10-07 01:06:12:411 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/index
2018-10-07 01:06:12:411 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/attach/upload
2018-10-07 01:06:12:411 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/article/publish
2018-10-07 01:06:12:411 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/page/publish
2018-10-07 01:06:12:411 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/category/:keyword/:page.html
2018-10-07 01:06:12:411 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/comments/delete
2018-10-07 01:06:12:411 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/template/content
2018-10-07 01:06:12:411 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/article/publish
2018-10-07 01:06:12:411 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/template/save
2018-10-07 01:06:12:412 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/category/save
2018-10-07 01:06:12:412 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/attach
2018-10-07 01:06:12:412 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/profile
2018-10-07 01:06:12:412 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/page/:page
2018-10-07 01:06:12:412 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/profile
2018-10-07 01:06:12:412 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/comments
2018-10-07 01:06:12:412 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/categories
2018-10-07 01:06:12:412 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/search.html
2018-10-07 01:06:12:412 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/advanced
2018-10-07 01:06:12:412 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/themes/setting
2018-10-07 01:06:12:413 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/login
2018-10-07 01:06:12:413 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/themes
2018-10-07 01:06:12:413 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/install
2018-10-07 01:06:12:413 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/article/:cid.html
2018-10-07 01:06:12:413 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/page/modify
2018-10-07 01:06:12:413 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/tags.html
2018-10-07 01:06:12:414 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => ALL	/admin/attach/delete
2018-10-07 01:06:12:414 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/page
2018-10-07 01:06:12:414 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/sitemap
2018-10-07 01:06:12:414 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/
2018-10-07 01:06:12:414 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/template
2018-10-07 01:06:12:414 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/search
2018-10-07 01:06:12:414 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/sitemap.xml
2018-10-07 01:06:12:414 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/password
2018-10-07 01:06:12:415 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/:cid.html
2018-10-07 01:06:12:415 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/page/:cid
2018-10-07 01:06:12:415 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/category
2018-10-07 01:06:12:415 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/category/:keyword/:page
2018-10-07 01:06:12:415 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/search/:keyword/:page
2018-10-07 01:06:12:415 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => ALL	/admin/page/delete
2018-10-07 01:06:12:415 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/tag/:name/:page
2018-10-07 01:06:12:416 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => ALL	/logout
2018-10-07 01:06:12:416 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => ALL	/admin/article/delete
2018-10-07 01:06:12:416 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/tag/:name.html
2018-10-07 01:06:12:416 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/page/:page.html
2018-10-07 01:06:12:416 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/search/:keyword.html
2018-10-07 01:06:12:416 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/comments
2018-10-07 01:06:12:416 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/setting
2018-10-07 01:06:12:422 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/archives.html
2018-10-07 01:06:12:422 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/search/:keyword/:page.html
2018-10-07 01:06:12:422 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/comment
2018-10-07 01:06:12:422 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/archives
2018-10-07 01:06:12:422 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/tag/:name
2018-10-07 01:06:12:422 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/category/:keyword.html
2018-10-07 01:06:12:422 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/article/:cid
2018-10-07 01:06:12:422 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/article/:cid
2018-10-07 01:06:12:423 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/install
2018-10-07 01:06:12:423 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/themes/setting
2018-10-07 01:06:12:423 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/login
2018-10-07 01:06:12:423 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => ALL	/admin/category/delete
2018-10-07 01:06:12:423 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/comments/status
2018-10-07 01:06:12:423 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/:cid
2018-10-07 01:06:12:423 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/setting
2018-10-07 01:06:12:423 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/article/modify
2018-10-07 01:06:12:423 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/themes/active
2018-10-07 01:06:12:424 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/admin/reload
2018-10-07 01:06:12:424 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/tag/:name/:page.html
2018-10-07 01:06:12:424 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/category/:keyword
2018-10-07 01:06:12:424 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => GET	/search/:keyword
2018-10-07 01:06:12:424 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add route => POST	/admin/backup
2018-10-07 01:06:12:424 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add hook  => [BEFORE	/.*]
2018-10-07 01:06:12:425 INFO - [ _(:3」∠)_ ] c.b.m.r.RouteMatcher      | Add hook  => [AFTER	/.*]
2018-10-07 01:06:12:439 INFO - [ _(:3」∠)_ ] c.t.i.SqliteJdbc          | blade dev mode: false
2018-10-07 01:06:12:439 INFO - [ _(:3」∠)_ ] c.t.i.SqliteJdbc          | load sqlite database path [/root/tale/resources/tale.db]
2018-10-07 01:06:12:439 INFO - [ _(:3」∠)_ ] c.t.i.SqliteJdbc          | load sqlite database src [jdbc:sqlite:///root/tale/resources/tale.db]
2018-10-07 01:06:12:720 INFO - [ _(:3」∠)_ ] c.t.i.SqliteJdbc          | database path is: /root/tale/resources/tale.db
2018-10-07 01:06:12:726 INFO - [ _(:3」∠)_ ] c.b.j.Base                | ⬢ Blade-JDBC initializing
2018-10-07 01:06:12:727 INFO - [ _(:3」∠)_ ] c.b.s.n.NettyServer       | ⬢ Register bean: [com.blade.Environment@4ca77897, com.tale.service.ContentsService@695066df, com.tale.init.WebContext@24c54dd9, com.tale.exception.GolbalExceptionHandler@7049a195, com.tale.service.SiteService@7dd0ccb, com.tale.controller.admin.AuthController@6d51e471, com.tale.service.OptionsService@6374c787, com.tale.controller.admin.ThemeController@5e0c9775, com.tale.controller.admin.CategoryController@31d8632b, com.tale.hooks.BaseWebHook@53486b0d, com.tale.controller.CategoryController@1645d61c, com.tale.controller.admin.AttachController@2c485c9e, com.tale.controller.IndexController@5efbb307, com.tale.service.CommentsService@4efbbbd6, com.tale.controller.admin.PageController@76366123, com.tale.controller.admin.IndexController@18747fd7, com.tale.controller.admin.CommentController@1b149455, com.tale.controller.InstallController@822b9ea, com.tale.service.MetasService@4d58feb4, com.tale.init.WebContext@24c54dd9, com.tale.controller.admin.ArticleController@7669ba0f, com.tale.hooks.BaseWebHook@53486b0d, com.tale.controller.admin.TemplateController@49602eab]
2018-10-07 01:06:12:809 INFO - [ _(:3」∠)_ ] j.t.JetEngineImpl         | JetEngine.version = 2.1.5
2018-10-07 01:06:12:809 INFO - [ _(:3」∠)_ ] j.t.JetEngineImpl         | JetEngine.loader = jetbrick.template.loader.ClasspathResourceLoader, root = /templates/, reload = true
2018-10-07 01:06:12:828 INFO - [ _(:3」∠)_ ] j.t.r.c.ClassResolver     | import package: java.lang.*
2018-10-07 01:06:12:828 INFO - [ _(:3」∠)_ ] j.t.r.c.ClassResolver     | import package: java.util.*
2018-10-07 01:06:12:830 INFO - [ _(:3」∠)_ ] j.t.r.m.MethodInvokerResolver | import 38 methods from class jetbrick.template.runtime.buildin.JetMethods
2018-10-07 01:06:12:831 INFO - [ _(:3」∠)_ ] j.t.r.f.FunctionInvokerResolver | import 11 functions from class jetbrick.template.runtime.buildin.JetFunctions
2018-10-07 01:06:12:833 INFO - [ _(:3」∠)_ ] j.t.r.t.TagInvokerResolver | import 2 tags from class jetbrick.template.runtime.buildin.JetTags
2018-10-07 01:06:12:833 INFO - [ _(:3」∠)_ ] j.t.r.GlobalResolver      | Scanning @JetMethods, @JetFunctions, @JetTags implements from [com.tale] ...
2018-10-07 01:06:12:858 INFO - [ _(:3」∠)_ ] j.t.r.GlobalResolver      | Found 0 annotated classes, time elapsed 24 ms.
2018-10-07 01:06:12:884 INFO - [ _(:3」∠)_ ] j.t.JetTemplateImpl       | Loading template: /comm/macros.html
2018-10-07 01:06:13:056 INFO - [ _(:3」∠)_ ] j.t.r.f.FunctionInvokerResolver | import 21 functions from class com.tale.extension.Commons
2018-10-07 01:06:13:057 INFO - [ _(:3」∠)_ ] j.t.r.f.FunctionInvokerResolver | import 50 functions from class com.tale.extension.Theme
2018-10-07 01:06:13:057 INFO - [ _(:3」∠)_ ] j.t.r.f.FunctionInvokerResolver | import 2 functions from class com.tale.extension.AdminCommons
2018-10-07 01:06:13:057 INFO - [ _(:3」∠)_ ] j.t.r.t.TagInvokerResolver | import 1 tags from class com.tale.extension.JetTag
2018-10-07 01:06:13:067 DEBUG - [ _(:3」∠)_ ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_options
2018-10-07 01:06:13:067 DEBUG - [ _(:3」∠)_ ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 01:06:13:108 INFO - [ _(:3」∠)_ ] c.b.s.n.NettyServer       | ⬢ Watched environment: true
2018-10-07 01:06:13:145 INFO - [ _(:3」∠)_ ] c.b.s.n.NettyServer       | ⬢ Use NioEventLoopGroup
2018-10-07 01:06:13:503 INFO - [ _(:3」∠)_ ] c.b.s.n.NettyServer       | ⬢ Tale (塌了) initialize successfully, Time elapsed: 1326 ms
2018-10-07 01:06:13:503 INFO - [ _(:3」∠)_ ] c.b.s.n.NettyServer       | ⬢ Blade start with 0.0.0.0:1997
2018-10-07 01:06:13:504 INFO - [ _(:3」∠)_ ] c.b.s.n.NettyServer       | ⬢ Open your web browser and navigate to http://127.0.0.1:1997 ⚡
2018-10-07 01:42:22:409 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/robots.txt
2018-10-07 01:42:22:409 WARN - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | Not Found	/robots.txt
2018-10-07 01:42:22:415 INFO - [ nio-worker@ thread-1 ] j.t.JetTemplateImpl       | Loading template: /comm/error_404.html
2018-10-07 01:42:22:555 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/category/Java
2018-10-07 01:42:22:575 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-07 01:42:22:575 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /category/Java, 来路地址: 127.0.0.1
2018-10-07 01:42:22:576 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => select a.*, count(b.cid) as count from t_metas a left join `t_relationships` b on a.mid = b.mid where a.type = :p1 and a.name = :p2 group by a.mid
2018-10-07 01:42:22:576 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [category, Java]
2018-10-07 01:42:22:599 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (select a.* from t_contents a left join t_relationships b on a.cid = b.cid where b.mid = :p1 and a.status = 'publish' and a.type = 'post') tmp
2018-10-07 01:42:22:599 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [4]
2018-10-07 01:42:22:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => select a.* from t_contents a left join t_relationships b on a.cid = b.cid where b.mid = :p1 and a.status = 'publish' and a.type = 'post' ORDER BY a.created desc LIMIT 0, 12
2018-10-07 01:42:22:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [4]
2018-10-07 01:42:22:650 INFO - [ nio-worker@ thread-2 ] j.t.JetTemplateImpl       | Loading template: themes/default/page-category.html
2018-10-07 01:42:22:664 INFO - [ nio-worker@ thread-2 ] j.t.JetTemplateImpl       | Loading template: themes/default/partial/header.html
2018-10-07 01:42:22:725 INFO - [ nio-worker@ thread-2 ] j.t.JetTemplateImpl       | Loading template: themes/default/partial/footer.html
2018-10-07 01:42:22:733 INFO - [ nio-worker@ thread-2 ] j.t.JetTemplateImpl       | Loading template: themes/default/partial/social.html
2018-10-07 01:42:22:740 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 01:42:22:740 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 01:42:22:741 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 01:42:22:741 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 01:42:22:751 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 01:42:22:751 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 01:42:22:751 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 01:42:22:751 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 02:52:55:386 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/35
2018-10-07 02:52:55:388 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-07 02:52:55:389 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /article/35, 来路地址: 127.0.0.1
2018-10-07 02:52:55:393 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 02:52:55:393 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [35]
2018-10-07 02:52:55:396 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-07 02:52:55:396 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [30, 35]
2018-10-07 02:52:55:450 INFO - [ nio-worker@ thread-1 ] j.t.JetTemplateImpl       | Loading template: themes/default/post.html
2018-10-07 02:52:55:830 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-07 02:52:55:830 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1525926224]
2018-10-07 02:52:55:836 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-07 02:52:55:836 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1525926224]
2018-10-07 02:52:55:849 INFO - [ nio-worker@ thread-1 ] j.t.JetTemplateImpl       | Loading template: themes/default/partial/comments.html
2018-10-07 02:52:55:867 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 02:52:55:867 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [35, 0]
2018-10-07 02:52:55:868 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 02:52:55:868 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [35, 0]
2018-10-07 02:52:55:871 INFO - [ nio-worker@ thread-1 ] j.t.JetTemplateImpl       | Loading template: /comm/tale_comment.html
2018-10-07 02:52:55:872 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 02:52:55:872 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 02:52:55:873 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 02:52:55:873 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 02:52:55:875 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 02:52:55:886 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 02:52:55:887 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 02:52:55:887 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 02:52:58:889 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 02:52:59:456 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 02:52:59:861 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery/3.2.1/jquery.min.js
2018-10-07 02:53:00:325 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 02:53:00:789 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 03:55:20:885 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/39
2018-10-07 03:55:20:885 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-07 03:55:20:885 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /article/39, 来路地址: 127.0.0.1
2018-10-07 03:55:20:887 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 03:55:20:888 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [39]
2018-10-07 03:55:20:888 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-07 03:55:20:888 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [26, 39]
2018-10-07 03:55:20:998 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-07 03:55:20:998 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1527391849]
2018-10-07 03:55:20:999 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-07 03:55:20:999 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1527391849]
2018-10-07 03:55:21:000 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 03:55:21:000 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [39, 0]
2018-10-07 03:55:21:002 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 03:55:21:002 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [39, 0]
2018-10-07 03:55:21:004 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 03:55:21:004 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 03:55:21:004 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 03:55:21:004 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 03:55:21:006 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 03:55:21:006 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 03:55:21:006 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 03:55:21:006 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 03:55:54:427 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 03:55:54:954 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery/3.2.1/jquery.min.js
2018-10-07 05:45:48:560 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/31
2018-10-07 05:45:48:561 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-07 05:45:48:561 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /article/31, 来路地址: 127.0.0.1
2018-10-07 05:45:48:562 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 05:45:48:562 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [31]
2018-10-07 05:45:48:562 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-07 05:45:48:562 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [39, 31]
2018-10-07 05:45:48:615 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-07 05:45:48:615 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1525082403]
2018-10-07 05:45:48:617 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-07 05:45:48:617 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1525082403]
2018-10-07 05:45:48:625 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 05:45:48:625 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [31, 0]
2018-10-07 05:45:48:626 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 05:45:48:626 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [31, 0]
2018-10-07 05:45:48:627 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 05:45:48:627 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 05:45:48:628 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 05:45:48:628 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 05:45:48:629 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 05:45:48:629 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 05:45:48:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 05:45:48:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 05:54:15:366 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 05:54:15:368 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 05:54:15:373 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 05:54:15:395 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 05:54:15:622 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 05:54:15:931 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 05:54:15:935 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 05:54:15:937 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 05:54:15:962 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 05:54:17:707 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/favicon.png
2018-10-07 06:42:22:222 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 06:42:22:359 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 06:42:22:499 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 06:42:22:514 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 06:42:22:647 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 06:42:22:720 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 06:42:22:725 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 06:42:22:737 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 06:42:22:792 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 06:45:59:435 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 06:45:59:439 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 06:45:59:450 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 06:45:59:467 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 06:45:59:607 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 06:45:59:818 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 06:45:59:822 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 06:45:59:823 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 06:45:59:829 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 07:05:29:657 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/page/3
2018-10-07 07:05:29:662 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-07 07:05:29:662 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /page/3, 来路地址: 127.0.0.1
2018-10-07 07:05:29:666 INFO - [ nio-worker@ thread-1 ] j.t.JetTemplateImpl       | Loading template: themes/default/index.html
2018-10-07 07:05:29:671 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 07:05:29:671 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 07:05:29:672 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 24, 12
2018-10-07 07:05:29:676 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 07:05:29:905 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 07:05:29:905 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 07:05:29:912 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 24, 12
2018-10-07 07:05:29:912 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 07:05:29:930 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 07:05:29:930 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 07:05:29:931 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 07:05:29:931 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 07:05:29:933 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 07:05:29:933 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 07:05:29:934 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 07:05:29:934 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 07:06:32:874 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 07:06:32:886 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 07:06:32:892 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 07:06:32:990 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 07:06:33:229 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 07:06:33:515 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 07:06:33:518 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 07:06:33:642 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 07:06:33:672 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 07:06:40:425 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 07:06:40:431 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 07:06:40:458 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 07:06:40:467 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 07:06:41:043 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 07:06:41:047 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 07:06:41:048 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 07:06:41:049 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 07:06:41:050 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 07:08:13:912 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 07:08:13:915 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 07:08:13:918 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 07:08:14:128 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 07:08:14:435 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 07:08:14:441 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 07:08:14:441 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 07:08:14:442 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 07:08:15:261 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 07:08:15:494 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 07:08:15:690 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 07:08:15:716 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 07:08:15:939 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 07:08:16:110 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 07:08:16:113 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 07:08:16:175 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 07:08:16:230 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 07:08:16:448 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 07:10:03:117 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/
2018-10-07 07:10:03:119 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:10:03:119 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /, 来路地址: 127.0.0.1
2018-10-07 07:10:03:120 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_users WHERE uid = :p1
2018-10-07 07:10:03:120 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [1]
2018-10-07 07:10:03:128 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 07:10:03:128 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 07:10:03:129 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 07:10:03:129 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 07:10:03:341 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 07:10:03:341 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 07:10:03:342 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 07:10:03:342 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 07:10:03:350 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 07:10:03:350 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 07:10:03:351 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 07:10:03:351 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 07:10:03:353 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 07:10:03:353 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 07:10:03:353 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 07:10:03:353 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 07:10:03:713 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 07:10:03:716 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 07:10:03:862 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery/3.2.1/jquery.min.js
2018-10-07 07:10:03:996 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 07:10:04:011 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 07:10:04:284 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 07:10:04:289 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 07:10:09:695 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 07:10:09:701 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 07:10:09:723 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 07:10:09:820 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 07:10:09:878 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 07:11:09:127 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 07:11:09:130 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 07:11:09:155 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 07:11:09:295 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 07:11:09:373 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 07:11:10:100 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 07:11:10:104 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 07:11:10:105 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 07:11:10:115 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 07:11:28:663 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/43
2018-10-07 07:11:28:663 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:11:28:663 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /article/43, 来路地址: 127.0.0.1
2018-10-07 07:11:28:663 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 07:11:28:664 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [43]
2018-10-07 07:11:28:664 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-07 07:11:28:664 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [30, 43]
2018-10-07 07:11:28:725 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-07 07:11:28:725 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1536478068]
2018-10-07 07:11:28:727 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-07 07:11:28:727 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1536478068]
2018-10-07 07:11:28:734 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 07:11:28:734 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [43, 0]
2018-10-07 07:11:28:735 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 07:11:28:735 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [43, 0]
2018-10-07 07:11:28:739 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE parent = :p1 ORDER BY coid ASC
2018-10-07 07:11:28:739 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [4]
2018-10-07 07:11:28:740 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 07:11:28:740 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [43, 0]
2018-10-07 07:11:28:741 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 07:11:28:741 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [43, 0]
2018-10-07 07:11:28:741 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE parent = :p1 ORDER BY coid ASC
2018-10-07 07:11:28:741 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [4]
2018-10-07 07:11:28:751 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 07:11:28:752 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 07:11:28:752 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 07:11:28:752 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 07:11:28:754 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 07:11:28:754 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 07:11:28:756 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 07:11:28:756 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 07:11:28:920 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery/3.2.1/jquery.min.js
2018-10-07 07:11:28:925 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/qqov3t8cfaianrijhhlacmh8c7.png
2018-10-07 07:11:28:936 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/vbqqbemd0eg6fovt45buu04gru.png
2018-10-07 07:11:33:788 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/admin
2018-10-07 07:11:33:789 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:11:33:789 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin, 来路地址: 127.0.0.1
2018-10-07 07:11:33:789 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 07:11:33:789 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 07:11:33:790 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 5
2018-10-07 07:11:33:790 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 07:11:33:798 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 07:11:33:798 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 07:11:33:799 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 5
2018-10-07 07:11:33:799 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 07:11:33:800 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_contents WHERE type = :p1 AND status = :p2
2018-10-07 07:11:33:800 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 07:11:33:801 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_contents WHERE type = :p1 AND status = :p2
2018-10-07 07:11:33:801 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [page, publish]
2018-10-07 07:11:33:801 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_comments
2018-10-07 07:11:33:801 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 07:11:33:802 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_attach
2018-10-07 07:11:33:802 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 07:11:33:813 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_metas WHERE type = :p1
2018-10-07 07:11:33:813 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [tag]
2018-10-07 07:11:33:815 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_metas WHERE type = :p1
2018-10-07 07:11:33:815 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [category]
2018-10-07 07:11:33:815 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_logs) tmp
2018-10-07 07:11:33:815 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 07:11:33:820 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_logs ORDER BY id desc LIMIT 0, 20
2018-10-07 07:11:33:820 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 07:11:33:826 INFO - [ nio-worker@ thread-1 ] j.t.JetTemplateImpl       | Loading template: admin/index.html
2018-10-07 07:11:33:842 INFO - [ nio-worker@ thread-1 ] j.t.JetTemplateImpl       | Loading template: admin/header.html
2018-10-07 07:11:33:861 INFO - [ nio-worker@ thread-1 ] j.t.JetTemplateImpl       | Loading template: admin/footer.html
2018-10-07 07:11:34:063 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/bootstrap/3.3.7/css/bootstrap.min.css
2018-10-07 07:11:34:065 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/font-awesome/4.7.0/css/font-awesome.min.css
2018-10-07 07:11:34:067 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/limonte-sweetalert2/6.4.1/sweetalert2.min.css
2018-10-07 07:11:34:070 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/css/style.min.css
2018-10-07 07:11:34:211 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/bootstrap/3.3.7/js/bootstrap.min.js
2018-10-07 07:11:34:265 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/limonte-sweetalert2/6.4.1/sweetalert2.min.js
2018-10-07 07:11:34:267 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/images/unicorn.png
2018-10-07 07:11:34:271 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/js/jquery.app.js
2018-10-07 07:11:34:346 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/js/base.js
2018-10-07 07:11:34:356 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/font-awesome/4.7.0/fonts/fontawesome-webfont.woff2
2018-10-07 07:12:16:196 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 07:12:16:375 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 07:12:16:660 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 07:12:16:697 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 07:12:17:252 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 07:12:26:594 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/05/rqc8oir8pqh64pnum3g7p0vjhu.png
2018-10-07 07:13:36:895 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 07:14:00:365 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 07:14:00:886 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 07:14:00:911 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 07:14:00:941 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 07:17:20:549 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 07:17:20:611 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 07:17:20:612 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 07:17:20:727 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 07:17:20:739 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 07:17:44:842 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 07:17:45:091 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 07:17:45:094 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 07:17:45:097 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 07:17:45:102 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 07:19:35:506 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 07:19:35:698 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 07:19:36:014 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 07:19:36:018 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 07:19:36:020 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 07:31:41:983 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/
2018-10-07 07:31:41:983 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:31:41:983 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /, 来路地址: 127.0.0.1
2018-10-07 07:31:41:984 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 07:31:41:984 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 07:31:41:985 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 07:31:41:985 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 07:31:42:146 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 07:31:42:146 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 07:31:42:147 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 07:31:42:147 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 07:31:42:174 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 07:31:42:174 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 07:31:42:175 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 07:31:42:175 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 07:31:42:176 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 07:31:42:176 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 07:31:42:177 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 07:31:42:177 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 07:31:42:587 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 07:31:42:588 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 07:31:42:764 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery/3.2.1/jquery.min.js
2018-10-07 07:31:42:957 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 07:31:42:979 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 07:31:43:160 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 07:31:43:348 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/bg-ico.png
2018-10-07 07:31:43:350 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/11.jpg
2018-10-07 07:31:43:355 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/12.jpg
2018-10-07 07:31:43:356 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/15.jpg
2018-10-07 07:31:43:359 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 07:31:43:560 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 07:31:43:747 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 07:31:43:950 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/19.jpg
2018-10-07 07:31:43:951 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/1.jpg
2018-10-07 07:31:44:157 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/2.jpg
2018-10-07 07:31:44:235 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 07:31:44:824 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/admin/article/publish
2018-10-07 07:31:44:825 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:31:44:825 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/publish, 来路地址: 127.0.0.1
2018-10-07 07:31:44:833 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE type = :p1 ORDER BY sort desc, mid desc
2018-10-07 07:31:44:833 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [category]
2018-10-07 07:31:44:835 INFO - [ nio-worker@ thread-2 ] j.t.JetTemplateImpl       | Loading template: admin/article_edit.html
2018-10-07 07:31:45:115 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/bootstrap/3.3.7/css/bootstrap.min.css
2018-10-07 07:31:45:116 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/font-awesome/4.7.0/css/font-awesome.min.css
2018-10-07 07:31:45:119 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/limonte-sweetalert2/6.4.1/sweetalert2.min.css
2018-10-07 07:31:45:122 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/css/style.min.css
2018-10-07 07:31:45:311 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/tagsinput/jquery.tagsinput.css
2018-10-07 07:31:45:330 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/select2/dist/css/select2-bootstrap.css
2018-10-07 07:31:45:375 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/toggles/toggles.css
2018-10-07 07:31:45:433 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/multi-select/0.9.12/css/multi-select.min.css
2018-10-07 07:31:45:494 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/select2/3.4.8/select2.min.css
2018-10-07 07:31:45:497 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/mditor/css/mditor.min.css
2018-10-07 07:31:45:523 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/summernote/0.8.2/summernote.css
2018-10-07 07:31:45:535 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/dropzone/4.3.0/min/dropzone.min.css
2018-10-07 07:31:45:578 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/font-awesome/4.7.0/fonts/fontawesome-webfont.woff2
2018-10-07 07:31:45:643 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/images/unicorn.png
2018-10-07 07:31:45:713 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/bootstrap/3.3.7/js/bootstrap.min.js
2018-10-07 07:31:45:719 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/limonte-sweetalert2/6.4.1/sweetalert2.min.js
2018-10-07 07:31:45:728 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/js/jquery.app.js
2018-10-07 07:31:45:745 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/mditor/font/af7ae505a9eed503f8b8e6982036873e.woff2
2018-10-07 07:31:45:859 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/js/base.js
2018-10-07 07:31:45:864 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/tagsinput/jquery.tagsinput.min.js
2018-10-07 07:31:45:937 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery-multi-select/jquery.quicksearch.js
2018-10-07 07:31:45:939 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/mditor/js/mditor.min.js
2018-10-07 07:31:46:070 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/wysihtml5/0.3.0/wysihtml5.min.js
2018-10-07 07:31:46:071 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/summernote/0.8.2/summernote.min.js
2018-10-07 07:31:46:101 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/summernote/0.8.2/lang/summernote-zh-CN.min.js
2018-10-07 07:31:46:125 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/multi-select/0.9.12/js/jquery.multi-select.min.js
2018-10-07 07:31:46:192 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/select2/3.4.8/select2.min.js
2018-10-07 07:31:46:289 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery-toggles/2.0.4/toggles.min.js
2018-10-07 07:31:46:316 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/dropzone/4.3.0/min/dropzone.min.js
2018-10-07 07:31:46:354 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/to-markdown/3.1.0/to-markdown.min.js
2018-10-07 07:31:46:367 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/js/article.js
2018-10-07 07:31:46:660 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/mditor/font/a48ac41620cd818c5020d0f4302489ff.ttf
2018-10-07 07:31:46:672 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/summernote/0.8.2/font/summernote.woff
2018-10-07 07:31:46:977 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/images/favicon.png
2018-10-07 07:32:04:202 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/select2/3.4.8/select2-spinner.gif
2018-10-07 07:32:06:385 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/select2/3.4.8/select2.png
2018-10-07 07:33:46:931 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/publish
2018-10-07 07:33:46:938 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:33:46:938 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/publish, 来路地址: 127.0.0.1
2018-10-07 07:33:46:940 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => INSERT INTO t_contents (title, created, modified, content, author_id, type, fmt_type, tags, categories, status, allow_comment, allow_ping, allow_feed) VALUES (:title, :created, :modified, :content, :authorId, :type, :fmtType, :tags, :categories, :status, :allowComment, :allowPing, :allowFeed)
2018-10-07 07:33:46:993 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:33:46:993 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:33:46:993 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => INSERT INTO t_metas (name, slug, type) VALUES (:name, :slug, :type)
2018-10-07 07:33:47:020 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:33:47:020 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:33:47:021 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => INSERT INTO t_relationships (cid, mid) VALUES (:cid, :mid)
2018-10-07 07:33:47:049 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:33:47:049 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:33:47:050 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => INSERT INTO t_metas (name, slug, type) VALUES (:name, :slug, :type)
2018-10-07 07:33:47:080 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:33:47:080 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:33:47:080 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => INSERT INTO t_relationships (cid, mid) VALUES (:cid, :mid)
2018-10-07 07:33:47:109 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:33:47:109 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:33:47:110 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:33:47:110 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:33:47:110 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => INSERT INTO t_relationships (cid, mid) VALUES (:cid, :mid)
2018-10-07 07:34:46:854 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:34:46:854 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:34:46:854 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:34:46:855 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:34:46:855 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912086, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了这个文章[[]](https://my.oschina.net/zss1993/blog/1790223), markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:34:46:886 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:34:46:886 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:34:46:889 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:34:46:889 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:34:46:890 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:34:46:890 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:34:46:890 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:34:46:890 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:34:46:891 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:34:46:891 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:34:46:891 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:34:46:891 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:35:46:585 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:35:46:587 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:35:46:587 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:35:46:587 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:35:46:587 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912146, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:35:46:619 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:35:46:619 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:35:46:619 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:35:46:619 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:35:46:620 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:35:46:620 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:35:46:620 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:35:46:620 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:35:46:621 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:35:46:621 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:35:46:621 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:35:46:621 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:36:46:584 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:36:46:584 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:36:46:584 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:36:46:585 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:36:46:585 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912206, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:36:46:623 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:36:46:623 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:36:46:623 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:36:46:623 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:36:46:624 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:36:46:624 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:36:46:625 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:36:46:625 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:36:46:625 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:36:46:625 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:36:46:626 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:36:46:626 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:37:46:584 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:37:46:584 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:37:46:585 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:37:46:585 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:37:46:585 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912266, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:37:46:647 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:37:46:647 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:37:46:648 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:37:46:648 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:37:46:648 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:37:46:648 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:37:46:649 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:37:46:649 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:37:46:649 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:37:46:649 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:37:46:650 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:37:46:650 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:38:46:967 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:38:46:967 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:38:46:967 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:38:46:968 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:38:46:968 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912326, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# qianit, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:38:47:014 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:38:47:014 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:38:47:015 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:38:47:015 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:38:47:015 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:38:47:015 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:38:47:016 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:38:47:016 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:38:47:016 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:38:47:016 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:38:47:017 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:38:47:017 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:39:46:585 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:39:46:586 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:39:46:586 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:39:46:586 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:39:46:586 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912386, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

外网服务器changshang, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:39:46:624 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:39:46:624 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:39:46:625 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:39:46:625 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:39:46:625 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:39:46:625 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:39:46:626 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:39:46:626 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:39:46:626 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:39:46:626 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:39:46:627 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:39:46:627 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:40:46:590 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:40:46:590 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:40:46:590 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:40:46:593 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_users WHERE uid = :p1
2018-10-07 07:40:46:594 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [1]
2018-10-07 07:40:46:595 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:40:46:595 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912446, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:40:46:646 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:40:46:646 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:40:46:647 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:40:46:647 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:40:46:648 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:40:46:648 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:40:46:648 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:40:46:648 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:40:46:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:40:46:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:40:46:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:40:46:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:41:46:881 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:41:46:881 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:41:46:881 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:41:46:881 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:41:46:881 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912506, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭XXXX，用来畅游世界，你懂的，, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:41:46:913 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:41:46:913 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:41:46:914 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:41:46:914 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:41:46:914 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:41:46:914 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:41:46:915 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:41:46:915 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:41:46:915 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:41:46:915 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:41:46:916 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:41:46:916 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:42:46:943 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:42:46:944 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:42:46:944 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:42:46:944 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:42:46:944 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912566, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:42:46:975 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:42:46:975 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:42:46:975 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:42:46:975 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:42:46:976 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:42:46:976 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:42:46:976 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:42:46:976 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:42:46:977 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:42:46:977 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:42:46:978 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:42:46:978 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:43:47:335 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:43:47:336 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:43:47:336 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:43:47:336 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:43:47:336 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912627, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:43:47:373 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:43:47:373 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:43:47:373 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:43:47:373 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:43:47:374 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:43:47:374 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:43:47:375 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:43:47:375 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:43:47:375 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:43:47:375 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:43:47:376 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:43:47:376 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:44:46:587 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:44:46:587 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:44:46:587 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:44:46:587 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:44:46:587 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912686, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:44:46:629 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:44:46:629 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:44:46:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:44:46:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:44:46:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:44:46:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:44:46:631 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:44:46:631 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:44:46:632 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:44:46:632 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:44:46:632 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:44:46:632 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:45:47:174 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:45:47:174 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:45:47:174 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:45:47:174 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:45:47:174 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912747, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```

```  
, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:45:47:294 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:45:47:294 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:45:47:295 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:45:47:295 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:45:47:295 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:45:47:295 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:45:47:296 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:45:47:296 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:45:47:296 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:45:47:296 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:45:47:297 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:45:47:297 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:46:46:588 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:46:46:588 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:46:46:588 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:46:46:588 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:46:46:588 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912806, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“”yourdomain.com"  #设置环境变量，ngrok域名

```  
, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:46:46:629 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:46:46:629 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:46:46:629 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:46:46:629 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:46:46:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:46:46:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:46:46:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:46:46:631 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:46:46:631 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:46:46:631 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:46:46:632 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:46:46:632 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:47:47:178 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:47:47:178 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:47:47:178 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:47:47:178 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:47:47:178 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912867, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```

```  
, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:47:47:210 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:47:47:210 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:47:47:210 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:47:47:210 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:47:47:211 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:47:47:211 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:47:47:211 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:47:47:211 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:47:47:212 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:47:47:212 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:47:47:212 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:47:47:212 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:48:46:588 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:48:46:588 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:48:46:588 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:48:46:588 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:48:46:588 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912926, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

然后从git仓库导入ngrok
```
git clone https://github.com/inconshreveable/ngrok.git
```  

, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:48:46:626 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:48:46:626 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:48:46:627 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:48:46:627 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:48:46:627 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:48:46:627 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:48:46:627 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:48:46:627 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:48:46:628 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:48:46:628 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:48:46:628 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:48:46:628 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:49:47:181 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:49:47:181 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:49:47:181 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:49:47:182 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:49:47:182 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538912987, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:49:47:223 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:49:47:223 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:49:47:224 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:49:47:224 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:49:47:224 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:49:47:224 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:49:47:225 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:49:47:225 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:49:47:225 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:49:47:225 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:49:47:226 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:49:47:226 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:50:46:590 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:50:46:590 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:50:46:590 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:50:46:590 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:50:46:590 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538913046, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048

```  
, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:50:46:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:50:46:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:50:46:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:50:46:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:50:46:650 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:50:46:650 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:50:46:650 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:50:46:650 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:50:46:651 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:50:46:651 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:50:46:651 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:50:46:651 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:51:46:593 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:51:46:593 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:51:46:593 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:51:46:593 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:51:46:593 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538913106, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```


```  
, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:51:46:655 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:51:46:655 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:51:46:656 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:51:46:656 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:51:46:656 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:51:46:656 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:51:46:657 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:51:46:657 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:51:46:657 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:51:46:657 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:51:46:658 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:51:46:658 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:52:48:402 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:52:48:402 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:52:48:402 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:52:48:403 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:52:48:403 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538913168, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```

```  
, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:52:48:448 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:52:48:448 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:52:48:449 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:52:48:449 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:52:48:450 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:52:48:450 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:52:48:450 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:52:48:450 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:52:48:451 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:52:48:451 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:52:48:452 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:52:48:452 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:53:46:590 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:53:46:591 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:53:46:591 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:53:46:591 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:53:46:591 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538913226, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```
make release-server
make release-client
```  

# , markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:53:46:635 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:53:46:635 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:53:46:635 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:53:46:635 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:53:46:636 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:53:46:636 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:53:46:636 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:53:46:636 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:53:46:637 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:53:46:637 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:53:46:637 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:53:46:637 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:54:47:019 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:54:47:019 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:54:47:019 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:54:47:020 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:54:47:020 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538913287, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```
make release-server
make release-client
```  

# 使用方法
完成以上步骤之后则代表前期工作都准备好了，接下来就是如何shiyo, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:54:47:075 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:54:47:075 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:54:47:076 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:54:47:076 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:54:47:076 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:54:47:077 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:54:47:077 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:54:47:077 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:54:47:077 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:54:47:077 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:54:47:078 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:54:47:078 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:55:46:605 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:55:46:605 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:55:46:605 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:55:46:606 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:55:46:606 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538913346, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```
make release-server
make release-client
```  

# 使用方法
完成以上步骤之后则代表前期工作都准备好了，接下来就是如何使用的问题了，首先在这里要说明一下，我首次接触ngrok的时候踩了一个大坑，我以为客户端和服务端分别要从git下载并分别编译客户端或服务端，然后导致的, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:55:46:650 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:55:46:650 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:55:46:651 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:55:46:651 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:55:46:651 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:55:46:651 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:55:46:652 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:55:46:652 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:55:46:652 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:55:46:652 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:55:46:652 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:55:46:652 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:56:46:594 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:56:46:595 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:56:46:595 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:56:46:595 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:56:46:595 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538913406, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```
make release-server
make release-client
```  

# 使用方法
完成以上步骤之后则代表前期工作都准备好了，接下来就是如何使用的问题了，首先在这里要说明一下，我首次接触ngrok的时候踩了一个大坑，我以为客户端和服务端分别要从git下载并分别编译客户端或服务端，然后导致的服务端和客户端证书不一致所以无法使用，特此说明，ngrok只需要在一个地方下载就行了，建议在内网机器上下载，然后完成shangshu, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:56:46:643 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:56:46:643 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:56:46:644 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:56:46:644 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:56:46:644 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:56:46:644 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:56:46:645 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:56:46:645 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:56:46:645 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:56:46:645 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:56:46:646 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:56:46:646 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:57:46:597 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:57:46:597 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:57:46:597 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:57:46:598 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:57:46:598 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 搭建ngrok实现内网穿透, 1538913466, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```
make release-server
make release-client
```  

# 使用方法
完成以上步骤之后则代表前期工作都准备好了，接下来就是如何使用的问题了，首先在这里要说明一下，我首次接触ngrok的时候踩了一个大坑，我以为客户端和服务端分别要从git下载并分别编译客户端或服务端，然后导致的服务端和客户端证书不一致所以无法使用，特此说明，ngrok只需要在一个地方下载就行了，建议在内网机器上下载编译，然后完成上述操作之后，把文件夹打包发给外网服务器。
完成编译后会在当前目录下shen, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:57:46:646 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:57:46:646 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:57:46:647 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:57:46:647 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:57:46:647 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:57:46:647 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:57:46:648 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:57:46:648 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:57:46:648 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:57:46:648 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:57:46:649 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:57:46:649 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:58:46:593 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:58:46:593 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:58:46:593 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:58:46:593 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:58:46:593 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 在Linux搭建ngrok实现内网穿透, 1538913526, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```
make release-server
make release-client
```  

# 使用方法
完成以上步骤之后则代表前期工作都准备好了，接下来就是如何使用的问题了，首先在这里要说明一下，我首次接触ngrok的时候踩了一个大坑，我以为客户端和服务端分别要从git下载并分别编译客户端或服务端，然后导致的服务端和客户端证书不一致所以无法使用，特此说明，ngrok只需要在一个地方下载就行了，建议在内网机器上下载编译，然后完成上述操作之后，把文件夹打包发给外网服务器。
完成编译后会在当前目录下生成一个bin目录，里面有一个ngrok和ngrokd，ngrokd是服务端用的（也就是外网服务器上用的），ngrok是客户端用的（内网服务器用的），, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:58:46:648 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:58:46:648 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:58:46:648 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:58:46:648 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:58:46:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:58:46:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:58:46:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:58:46:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:58:46:650 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:58:46:650 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:58:46:650 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:58:46:650 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 07:59:46:596 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 07:59:46:596 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 07:59:46:596 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 07:59:46:597 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 07:59:46:597 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 在Linux搭建ngrok实现内网穿透, 1538913586, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```
make release-server
make release-client
```  

# 使用方法
完成以上步骤之后则代表前期工作都准备好了，接下来就是如何使用的问题了，首先在这里要说明一下，我首次接触ngrok的时候踩了一个大坑，我以为客户端和服务端分别要从git下载并分别编译客户端或服务端，然后导致的服务端和客户端证书不一致所以无法使用，特此说明，ngrok只需要在一个地方下载就行了，建议在内网机器上下载编译，然后完成上述操作之后，把文件夹打包发给外网服务器。

完成编译后会在当前目录下生成一个bin目录，里面有一个ngrok和ngrokd，ngrokd是服务端用的（也就是外网服务器上用的），ngrok是客户端用的（内网服务器用的）。
1. 服务端使用方式：先给ngrokd授权 chmod +, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 07:59:46:650 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:59:46:650 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 07:59:46:650 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:59:46:650 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 07:59:46:651 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:59:46:651 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 07:59:46:651 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:59:46:651 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 07:59:46:652 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 07:59:46:652 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 07:59:46:652 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 07:59:46:652 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 08:00:46:594 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 08:00:46:594 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:00:46:594 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 08:00:46:595 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 08:00:46:595 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 在Linux搭建ngrok实现内网穿透, 1538913646, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```
make release-server
make release-client
```  

# 使用方法
完成以上步骤之后则代表前期工作都准备好了，接下来就是如何使用的问题了，首先在这里要说明一下，我首次接触ngrok的时候踩了一个大坑，我以为客户端和服务端分别要从git下载并分别编译客户端或服务端，然后导致的服务端和客户端证书不一致所以无法使用，特此说明，ngrok只需要在一个地方下载就行了，建议在内网机器上下载编译，然后完成上述操作之后，把文件夹打包发给外网服务器。

完成编译后会在当前目录下生成一个bin目录，里面有一个ngrok和ngrokd，ngrokd是服务端用的（也就是外网服务器上用的），ngrok是客户端用的（内网服务器用的）。
1. 服务端使用方式：进入bin目录，先给ngrokd授权 chmod +x ngrokd，然后执行
```
./ngrokd -domain="$NGROK_DOMAIN" -httpAddr=":80"
```  
服务端的服务开始启动, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 08:00:46:644 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:00:46:644 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 08:00:46:645 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:00:46:645 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 08:00:46:646 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:00:46:646 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 08:00:46:646 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:00:46:646 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 08:00:46:647 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:00:46:647 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 08:00:46:650 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:00:46:650 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 08:01:46:599 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 08:01:46:600 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:01:46:600 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 08:01:46:600 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 08:01:46:600 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 在Linux搭建ngrok实现内网穿透, 1538913706, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```
make release-server
make release-client
```  

# 使用方法
完成以上步骤之后则代表前期工作都准备好了，接下来就是如何使用的问题了，首先在这里要说明一下，我首次接触ngrok的时候踩了一个大坑，我以为客户端和服务端分别要从git下载并分别编译客户端或服务端，然后导致的服务端和客户端证书不一致所以无法使用，特此说明，ngrok只需要在一个地方下载就行了，建议在内网机器上下载编译，然后完成上述操作之后，把文件夹打包发给外网服务器。

完成编译后会在当前目录下生成一个bin目录，里面有一个ngrok和ngrokd，ngrokd是服务端用的（也就是外网服务器上用的），ngrok是客户端用的（内网服务器用的）。
1. 服务端使用方式：
进入bin目录，先给ngrokd授权 chmod +x ngrokd，然后执行
```
./ngrokd -domain="$NGROK_DOMAIN" -httpAddr=":80"
```  
服务端的服务开始启动，等待客户端连接。

1. 客户端的使用方式：
进入bin目录，给ngrok授权 chmod +x ngrok
然后在当前目录下, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 08:01:46:663 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:01:46:664 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 08:01:46:664 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:01:46:664 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 08:01:46:664 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:01:46:664 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 08:01:46:665 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:01:46:665 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 08:01:46:666 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:01:46:666 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 08:01:46:666 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:01:46:666 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 08:02:46:593 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 08:02:46:593 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:02:46:593 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 08:02:46:593 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 08:02:46:593 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 在Linux搭建ngrok实现内网穿透, 1538913766, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```
make release-server
make release-client
```  

# 使用方法
完成以上步骤之后则代表前期工作都准备好了，接下来就是如何使用的问题了，首先在这里要说明一下，我首次接触ngrok的时候踩了一个大坑，我以为客户端和服务端分别要从git下载并分别编译客户端或服务端，然后导致的服务端和客户端证书不一致所以无法使用，特此说明，ngrok只需要在一个地方下载就行了，建议在内网机器上下载编译，然后完成上述操作之后，把文件夹打包发给外网服务器。

完成编译后会在当前目录下生成一个bin目录，里面有一个ngrok和ngrokd，ngrokd是服务端用的（也就是外网服务器上用的），ngrok是客户端用的（内网服务器用的）。
1. 服务端使用方式：
进入bin目录，先给ngrokd授权 chmod +x ngrokd，然后执行
```
./ngrokd -domain="$NGROK_DOMAIN" -httpAddr=":80"
```  
服务端的服务开始启动，等待客户端连接。

1. 客户端的使用方式：
进入bin目录，给ngrok授权 chmod +x ngrok，然后在当前目录下创建文件ngrok.cfg，内容设置为
```
server_addr: "yourdomain.com:4443"
trust_host_root_certs: false
```  
记得把, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 08:02:46:629 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:02:46:629 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 08:02:46:629 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:02:46:629 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 08:02:46:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:02:46:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 08:02:46:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:02:46:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 08:02:46:631 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:02:46:631 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 08:02:46:631 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:02:46:631 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 08:03:47:692 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 08:03:47:692 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:03:47:692 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 08:03:47:692 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 08:03:47:692 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 在Linux搭建ngrok实现内网穿透, 1538913827, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```
make release-server
make release-client
```  

# 使用方法
完成以上步骤之后则代表前期工作都准备好了，接下来就是如何使用的问题了，首先在这里要说明一下，我首次接触ngrok的时候踩了一个大坑，我以为客户端和服务端分别要从git下载并分别编译客户端或服务端，然后导致的服务端和客户端证书不一致所以无法使用，特此说明，ngrok只需要在一个地方下载就行了，建议在内网机器上下载编译，然后完成上述操作之后，把文件夹打包发给外网服务器。

完成编译后会在当前目录下生成一个bin目录，里面有一个ngrok和ngrokd，ngrokd是服务端用的（也就是外网服务器上用的），ngrok是客户端用的（内网服务器用的）。
1. 服务端使用方式：
进入bin目录，先给ngrokd授权 chmod +x ngrokd，然后执行
```
./ngrokd -domain="$NGROK_DOMAIN" -httpAddr=":80"
```  
服务端的服务开始启动，等待客户端连接。

1. 客户端的使用方式：
进入bin目录，给ngrok授权 chmod +x ngrok，然后在当前目录下创建文件ngrok.cfg，内容设置为
```
server_addr: "yourdomain.com:4443"
trust_host_root_certs: false
```  
记得把yourdomain.com换成你自己的域名，然后执行
```
./ngrok -subdomain blog -config=ngrok.cfg 1997
```  
当屏幕上显示online的时候，则biaos, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 08:03:47:755 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:03:47:755 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 08:03:47:755 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:03:47:755 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 08:03:47:756 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:03:47:756 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 08:03:47:756 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:03:47:756 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 08:03:47:756 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:03:47:756 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 08:03:47:757 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:03:47:757 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 08:04:46:603 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 08:04:46:604 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:04:46:604 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 08:04:46:604 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 08:04:46:604 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 在Linux搭建ngrok实现内网穿透, 1538913886, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```
make release-server
make release-client
```  

# 使用方法
完成以上步骤之后则代表前期工作都准备好了，接下来就是如何使用的问题了，首先在这里要说明一下，我首次接触ngrok的时候踩了一个大坑，我以为客户端和服务端分别要从git下载并分别编译客户端或服务端，然后导致的服务端和客户端证书不一致所以无法使用，特此说明，ngrok只需要在一个地方下载就行了，建议在内网机器上下载编译，然后完成上述操作之后，把文件夹打包发给外网服务器。

完成编译后会在当前目录下生成一个bin目录，里面有一个ngrok和ngrokd，ngrokd是服务端用的（也就是外网服务器上用的），ngrok是客户端用的（内网服务器用的）。
1. 服务端使用方式：
进入bin目录，先给ngrokd授权 chmod +x ngrokd，然后执行
```
./ngrokd -domain="$NGROK_DOMAIN" -httpAddr=":80"
```  
服务端的服务开始启动，等待客户端连接。

1. 客户端的使用方式：
进入bin目录，给ngrok授权 chmod +x ngrok，然后在当前目录下创建文件ngrok.cfg，内容设置为
```
server_addr: "yourdomain.com:4443"
trust_host_root_certs: false
```  
记得把yourdomain.com换成你自己的域名，然后执行
```
./ngrok -subdomain blog -config=ngrok.cfg 1997
```  
当屏幕上显示online的时候，则表示已成功，上述命令中，blog代表二级域名，1997代表你想转发的端口，例如现在可以通过blog.qmxw, markdown, 内网穿透,ngrok, 默认分类, draft, true, true, true, 47]
2018-10-07 08:04:46:643 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:04:46:643 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 08:04:46:643 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:04:46:643 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 08:04:46:644 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:04:46:644 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 08:04:46:644 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:04:46:644 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 08:04:46:645 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:04:46:645 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 08:04:46:645 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:04:46:645 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 08:05:13:622 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 08:05:13:622 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:05:13:622 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 08:05:13:622 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 08:05:13:622 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 在Linux搭建ngrok实现内网穿透, 1538913913, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export GOPATH=/usr/local/ngrok/  #设置环境变量，Go语言的安装位置
export NGROK_DOMAIN=“yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```
make release-server
make release-client
```  

# 使用方法
完成以上步骤之后则代表前期工作都准备好了，接下来就是如何使用的问题了，首先在这里要说明一下，我首次接触ngrok的时候踩了一个大坑，我以为客户端和服务端分别要从git下载并分别编译客户端或服务端，然后导致的服务端和客户端证书不一致所以无法使用，特此说明，ngrok只需要在一个地方下载就行了，建议在内网机器上下载编译，然后完成上述操作之后，把文件夹打包发给外网服务器。

完成编译后会在当前目录下生成一个bin目录，里面有一个ngrok和ngrokd，ngrokd是服务端用的（也就是外网服务器上用的），ngrok是客户端用的（内网服务器用的）。
1. 服务端使用方式：
进入bin目录，先给ngrokd授权 chmod +x ngrokd，然后执行
```
./ngrokd -domain="$NGROK_DOMAIN" -httpAddr=":80"
```  
服务端的服务开始启动，等待客户端连接。

1. 客户端的使用方式：
进入bin目录，给ngrok授权 chmod +x ngrok，然后在当前目录下创建文件ngrok.cfg，内容设置为
```
server_addr: "yourdomain.com:4443"
trust_host_root_certs: false
```  
记得把yourdomain.com换成你自己的域名，然后执行
```
./ngrok -subdomain blog -config=ngrok.cfg 1997
```  
当屏幕上显示online的时候，则表示已成功，上述命令中，blog代表二级域名，1997代表你想转发的端口，例如现在可以通过blog.qmxwj.com来访问我的内网服务器中1997端口的资源了, markdown, 内网穿透,ngrok, 默认分类, publish, true, true, true, 47]
2018-10-07 08:05:13:709 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:05:13:709 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 08:05:13:710 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:05:13:710 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 08:05:13:710 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:05:13:710 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 08:05:13:711 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:05:13:711 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 08:05:13:711 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:05:13:711 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 08:05:13:712 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:05:13:712 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 08:05:15:150 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/admin/article
2018-10-07 08:05:15:151 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:05:15:151 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article, 来路地址: 127.0.0.1
2018-10-07 08:05:15:151 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1) tmp
2018-10-07 08:05:15:151 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post]
2018-10-07 08:05:15:152 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 ORDER BY created desc LIMIT 0, 15
2018-10-07 08:05:15:152 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post]
2018-10-07 08:05:15:154 INFO - [ nio-worker@ thread-2 ] j.t.JetTemplateImpl       | Loading template: admin/article_list.html
2018-10-07 08:05:15:387 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/bootstrap/3.3.7/css/bootstrap.min.css
2018-10-07 08:05:15:428 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/font-awesome/4.7.0/css/font-awesome.min.css
2018-10-07 08:05:15:653 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/limonte-sweetalert2/6.4.1/sweetalert2.min.css
2018-10-07 08:05:15:662 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/css/style.min.css
2018-10-07 08:05:15:677 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery/3.2.1/jquery.min.js
2018-10-07 08:05:15:687 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/images/unicorn.png
2018-10-07 08:05:15:753 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/bootstrap/3.3.7/js/bootstrap.min.js
2018-10-07 08:05:15:803 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/limonte-sweetalert2/6.4.1/sweetalert2.min.js
2018-10-07 08:05:15:829 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/js/jquery.app.js
2018-10-07 08:05:15:983 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/js/base.js
2018-10-07 08:05:16:137 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/font-awesome/4.7.0/fonts/fontawesome-webfont.woff2
2018-10-07 08:05:19:923 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/delete
2018-10-07 08:05:19:924 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:05:19:924 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/delete, 来路地址: 127.0.0.1
2018-10-07 08:05:19:924 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 08:05:19:924 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [44]
2018-10-07 08:05:19:925 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => DELETE FROM t_contents WHERE cid = :p1
2018-10-07 08:05:19:925 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [44]
2018-10-07 08:05:19:957 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => DELETE FROM t_relationships WHERE cid = :p1
2018-10-07 08:05:19:958 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [44]
2018-10-07 08:05:19:982 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => DELETE FROM t_comments WHERE cid = :p1
2018-10-07 08:05:19:983 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [44]
2018-10-07 08:05:19:983 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => INSERT INTO t_logs (action, data, author_id, ip, created) VALUES (:action, :data, :author_id, :ip, :created)
2018-10-07 08:05:23:202 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/
2018-10-07 08:05:23:202 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:05:23:202 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /, 来路地址: 127.0.0.1
2018-10-07 08:05:23:203 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 08:05:23:203 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 08:05:23:203 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 08:05:23:203 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 08:05:23:367 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 08:05:23:367 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 08:05:23:369 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 08:05:23:369 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 08:05:23:370 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 08:05:23:370 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:05:23:371 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 08:05:23:371 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:05:23:372 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 08:05:23:372 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:05:23:372 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 08:05:23:372 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:05:23:543 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 08:05:23:544 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 08:05:23:545 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 08:05:23:546 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 08:05:23:698 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 08:05:23:760 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/bg-ico.png
2018-10-07 08:05:23:763 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/12.jpg
2018-10-07 08:05:23:764 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/15.jpg
2018-10-07 08:05:23:767 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 08:05:23:768 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 08:05:23:855 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/2.jpg
2018-10-07 08:05:23:935 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/1.jpg
2018-10-07 08:05:23:973 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 08:05:24:085 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 08:05:24:286 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/19.jpg
2018-10-07 08:05:24:383 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/7.jpg
2018-10-07 08:05:35:537 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/47
2018-10-07 08:05:35:537 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:05:35:537 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /article/47, 来路地址: 127.0.0.1
2018-10-07 08:05:35:538 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 08:05:35:538 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47]
2018-10-07 08:05:35:538 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-07 08:05:35:538 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [1, 47]
2018-10-07 08:05:35:597 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-07 08:05:35:597 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1538912026]
2018-10-07 08:05:35:598 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-07 08:05:35:598 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1538912026]
2018-10-07 08:05:35:601 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 08:05:35:601 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 0]
2018-10-07 08:05:35:602 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 08:05:35:602 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 0]
2018-10-07 08:05:35:603 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 08:05:35:603 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:05:35:603 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 08:05:35:603 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:05:35:604 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 08:05:35:604 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:05:35:605 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 08:05:35:605 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:11:46:845 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/admin/article
2018-10-07 08:11:46:846 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:11:46:846 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article, 来路地址: 127.0.0.1
2018-10-07 08:11:46:847 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_users WHERE uid = :p1
2018-10-07 08:11:46:847 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [1]
2018-10-07 08:11:46:848 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1) tmp
2018-10-07 08:11:46:848 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post]
2018-10-07 08:11:46:848 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 ORDER BY created desc LIMIT 0, 15
2018-10-07 08:11:46:848 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post]
2018-10-07 08:11:47:118 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/bootstrap/3.3.7/css/bootstrap.min.css
2018-10-07 08:11:47:271 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/font-awesome/4.7.0/css/font-awesome.min.css
2018-10-07 08:11:47:530 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/limonte-sweetalert2/6.4.1/sweetalert2.min.css
2018-10-07 08:11:47:561 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/css/style.min.css
2018-10-07 08:11:47:563 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery/3.2.1/jquery.min.js
2018-10-07 08:11:47:564 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/images/unicorn.png
2018-10-07 08:11:47:569 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/bootstrap/3.3.7/js/bootstrap.min.js
2018-10-07 08:11:47:745 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/limonte-sweetalert2/6.4.1/sweetalert2.min.js
2018-10-07 08:11:47:832 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/js/jquery.app.js
2018-10-07 08:11:48:034 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/js/base.js
2018-10-07 08:11:48:281 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/font-awesome/4.7.0/fonts/fontawesome-webfont.woff2
2018-10-07 08:11:48:631 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/images/favicon.png
2018-10-07 08:11:50:746 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/
2018-10-07 08:11:50:747 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:11:50:747 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /, 来路地址: 127.0.0.1
2018-10-07 08:11:50:747 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 08:11:50:747 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 08:11:50:748 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 08:11:50:748 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 08:11:50:903 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 08:11:50:903 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 08:11:50:903 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 08:11:50:904 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 08:11:50:905 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 08:11:50:905 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:11:50:906 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 08:11:50:906 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:11:50:907 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 08:11:50:907 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:11:50:908 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 08:11:50:908 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:11:51:178 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 08:11:51:180 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 08:11:51:181 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 08:11:51:185 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 08:11:51:413 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 08:11:51:494 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/bg-ico.png
2018-10-07 08:11:51:495 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/12.jpg
2018-10-07 08:11:51:497 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/15.jpg
2018-10-07 08:11:51:498 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 08:11:51:499 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 08:11:51:633 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 08:11:51:741 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 08:11:51:836 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/1.jpg
2018-10-07 08:11:52:015 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/7.jpg
2018-10-07 08:11:52:319 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/19.jpg
2018-10-07 08:11:52:347 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/2.jpg
2018-10-07 08:11:52:708 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/47
2018-10-07 08:11:52:708 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:11:52:708 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /article/47, 来路地址: 127.0.0.1
2018-10-07 08:11:52:709 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 08:11:52:709 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47]
2018-10-07 08:11:52:709 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-07 08:11:52:709 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [2, 47]
2018-10-07 08:11:52:770 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-07 08:11:52:770 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1538912026]
2018-10-07 08:11:52:771 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-07 08:11:52:771 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1538912026]
2018-10-07 08:11:52:781 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 08:11:52:781 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 0]
2018-10-07 08:11:52:782 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 08:11:52:782 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 0]
2018-10-07 08:11:52:783 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 08:11:52:783 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:11:52:783 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 08:11:52:784 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:11:52:785 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 08:11:52:785 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:11:52:785 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 08:11:52:785 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:36:23:641 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/admin
2018-10-07 08:36:23:641 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:36:23:641 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin, 来路地址: 127.0.0.1
2018-10-07 08:36:23:642 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 08:36:23:642 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:36:23:642 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 5
2018-10-07 08:36:23:642 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:36:23:643 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 08:36:23:643 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:36:23:643 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 5
2018-10-07 08:36:23:643 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:36:23:644 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_contents WHERE type = :p1 AND status = :p2
2018-10-07 08:36:23:644 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 08:36:23:645 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_contents WHERE type = :p1 AND status = :p2
2018-10-07 08:36:23:645 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [page, publish]
2018-10-07 08:36:23:645 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_comments
2018-10-07 08:36:23:645 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:36:23:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_attach
2018-10-07 08:36:23:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:36:23:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_metas WHERE type = :p1
2018-10-07 08:36:23:649 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [tag]
2018-10-07 08:36:23:650 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_metas WHERE type = :p1
2018-10-07 08:36:23:650 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [category]
2018-10-07 08:36:23:650 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_logs) tmp
2018-10-07 08:36:23:650 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:36:23:651 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_logs ORDER BY id desc LIMIT 0, 20
2018-10-07 08:36:23:651 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:36:23:891 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/bootstrap/3.3.7/css/bootstrap.min.css
2018-10-07 08:36:23:893 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/font-awesome/4.7.0/css/font-awesome.min.css
2018-10-07 08:36:24:239 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/limonte-sweetalert2/6.4.1/sweetalert2.min.css
2018-10-07 08:36:24:244 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/css/style.min.css
2018-10-07 08:36:24:247 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery/3.2.1/jquery.min.js
2018-10-07 08:36:24:278 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/images/unicorn.png
2018-10-07 08:36:24:312 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/bootstrap/3.3.7/js/bootstrap.min.js
2018-10-07 08:36:24:431 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/limonte-sweetalert2/6.4.1/sweetalert2.min.js
2018-10-07 08:36:24:522 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/js/jquery.app.js
2018-10-07 08:36:24:615 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/js/base.js
2018-10-07 08:36:24:829 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/font-awesome/4.7.0/fonts/fontawesome-webfont.woff2
2018-10-07 08:36:26:355 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/admin/article
2018-10-07 08:36:26:356 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:36:26:356 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article, 来路地址: 127.0.0.1
2018-10-07 08:36:26:356 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1) tmp
2018-10-07 08:36:26:356 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post]
2018-10-07 08:36:26:357 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 ORDER BY created desc LIMIT 0, 15
2018-10-07 08:36:26:357 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post]
2018-10-07 08:36:27:889 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/admin/article/47
2018-10-07 08:36:27:890 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:36:27:890 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/47, 来路地址: 127.0.0.1
2018-10-07 08:36:27:890 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 08:36:27:890 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47]
2018-10-07 08:36:27:890 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE type = :p1 ORDER BY sort desc, mid desc
2018-10-07 08:36:27:891 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [category]
2018-10-07 08:36:28:154 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/tagsinput/jquery.tagsinput.css
2018-10-07 08:36:28:155 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/toggles/toggles.css
2018-10-07 08:36:28:156 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/select2/dist/css/select2-bootstrap.css
2018-10-07 08:36:28:157 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/multi-select/0.9.12/css/multi-select.min.css
2018-10-07 08:36:28:158 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/select2/3.4.8/select2.min.css
2018-10-07 08:36:28:165 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/mditor/css/mditor.min.css
2018-10-07 08:36:28:374 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/summernote/0.8.2/summernote.css
2018-10-07 08:36:28:375 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/dropzone/4.3.0/min/dropzone.min.css
2018-10-07 08:36:28:378 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/tagsinput/jquery.tagsinput.min.js
2018-10-07 08:36:28:378 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery-multi-select/jquery.quicksearch.js
2018-10-07 08:36:28:397 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/mditor/js/mditor.min.js
2018-10-07 08:36:28:570 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/wysihtml5/0.3.0/wysihtml5.min.js
2018-10-07 08:36:28:577 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/summernote/0.8.2/summernote.min.js
2018-10-07 08:36:28:580 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/summernote/0.8.2/lang/summernote-zh-CN.min.js
2018-10-07 08:36:28:581 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/multi-select/0.9.12/js/jquery.multi-select.min.js
2018-10-07 08:36:28:615 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/select2/3.4.8/select2.min.js
2018-10-07 08:36:28:782 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/mditor/font/af7ae505a9eed503f8b8e6982036873e.woff2
2018-10-07 08:36:28:791 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery-toggles/2.0.4/toggles.min.js
2018-10-07 08:36:28:872 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/dropzone/4.3.0/min/dropzone.min.js
2018-10-07 08:36:28:947 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/to-markdown/3.1.0/to-markdown.min.js
2018-10-07 08:36:28:992 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/js/article.js
2018-10-07 08:36:29:359 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/mditor/font/a48ac41620cd818c5020d0f4302489ff.ttf
2018-10-07 08:36:29:384 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/summernote/0.8.2/font/summernote.woff
2018-10-07 08:36:29:498 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/select2/3.4.8/select2.png
2018-10-07 08:36:45:764 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	POST	/admin/article/modify
2018-10-07 08:36:45:765 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:36:45:765 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article/modify, 来路地址: 127.0.0.1
2018-10-07 08:36:45:765 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET cid = :p1, title = :p2, modified = :p3, content = :p4, fmt_type = :p5, tags = :p6, categories = :p7, status = :p8, allow_comment = :p9, allow_ping = :p10, allow_feed = :p11 WHERE cid = :p12
2018-10-07 08:36:45:765 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 在Linux搭建ngrok实现内网穿透, 1538915805, # 前言
国庆期间在家收拾东西的时候发现了一个废弃的安卓手机，扔了又觉得可惜，于是想到将其利用起来试着搭成一个服务器，于是在网上找到了[这个文章](https://my.oschina.net/zss1993/blog/1790223)，按照步骤搭成功之后，通过ssh确实可以进去，但是发现我只能在内网下玩玩他，外网无法连接上，当然了，作为服务器当然得对外服务，只能在内网服务的话没啥意思，于是乎想到了内网穿透，利用ngrok来实现内网穿透
# 前提
要通过ngrok实现内网穿透，必须得满足两个条件：
1. 有一台外网服务器
1. 有一个域名

现在云主机厂商很多，弄个学生机也不贵，基本都是十块钱一个月，配置都还不错，可就是带宽感人，我无法忍受纳米级带宽，于是买的是国外的服务器，更主要的是国外服务器可以搭**socks，用来畅游世界，你懂的。域名的话国内各个云主机厂商也都有，有的也很便宜，我用的是国外的一家域名服务商，不是崇洋媚外，而是因为他免费...，[传送门](https://www.freenom.com/zh/index.html?lang=zh)，有兴趣的可以进去看看。
# 环境搭建
ngrok是go语言开发的，所以得先配个go的环境
```
yum install -y golang
export NGROK_DOMAIN="yourdomain.com"  #设置环境变量，域名
```  

如果没有git的话，还需要再安个git
```
yum -y install git
```  

# 下载ngrok

环境配好了之后就可以从git仓库下载ngrok了
```
git clone https://github.com/inconshreveable/ngrok.git
```  

# 生成自签名证书

```
cd ngrok
openssl genrsa -out rootCA.key 2048
openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
```  

# 把证书拷贝到指定目录
```
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key

```  

# 编译客户端和服务端
```
make release-server
make release-client
```  

# 使用方法
完成以上步骤之后则代表前期工作都准备好了，接下来就是如何使用的问题了，首先在这里要说明一下，我首次接触ngrok的时候踩了一个大坑，我以为客户端和服务端分别要从git下载并分别编译客户端或服务端，然后导致的服务端和客户端证书不一致所以无法使用，特此说明，ngrok只需要在一个地方下载就行了，建议在内网机器上下载编译，然后完成上述操作之后，把文件夹打包发给外网服务器。

完成编译后会在当前目录下生成一个bin目录，里面有一个ngrok和ngrokd，ngrokd是服务端用的（也就是外网服务器上用的），ngrok是客户端用的（内网服务器用的）。
1. 服务端使用方式：
进入bin目录，先给ngrokd授权 chmod +x ngrokd，然后执行
```
./ngrokd -domain="$NGROK_DOMAIN" -httpAddr=":80"
```  
服务端的服务开始启动，等待客户端连接。

1. 客户端的使用方式：
进入bin目录，给ngrok授权 chmod +x ngrok，然后在当前目录下创建文件ngrok.cfg，内容设置为
```
server_addr: "yourdomain.com:4443"
trust_host_root_certs: false
```  
记得把yourdomain.com换成你自己的域名，然后执行
```
./ngrok -subdomain blog -config=ngrok.cfg 1997
```  
当屏幕上显示online的时候，则表示已成功，上述命令中，blog代表二级域名，1997代表你想转发的端口，例如现在可以通过blog.qmxwj.com来访问我的内网服务器中1997端口的资源了, markdown, 内网穿透,ngrok, 默认分类, publish, true, true, true, 47]
2018-10-07 08:36:45:826 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:36:45:826 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [内网穿透, tag]
2018-10-07 08:36:45:827 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:36:45:827 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 34]
2018-10-07 08:36:45:827 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:36:45:827 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [ngrok, tag]
2018-10-07 08:36:45:828 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:36:45:828 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 35]
2018-10-07 08:36:45:828 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_metas WHERE name = :p1 AND type = :p2
2018-10-07 08:36:45:828 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [默认分类, category]
2018-10-07 08:36:45:829 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(*) FROM t_relationships WHERE cid = :p1 AND mid = :p2
2018-10-07 08:36:45:829 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 1]
2018-10-07 08:36:47:365 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/admin/article
2018-10-07 08:36:47:365 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:36:47:365 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /admin/article, 来路地址: 127.0.0.1
2018-10-07 08:36:47:366 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1) tmp
2018-10-07 08:36:47:366 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post]
2018-10-07 08:36:47:366 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 ORDER BY created desc LIMIT 0, 15
2018-10-07 08:36:47:366 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post]
2018-10-07 08:36:49:535 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/
2018-10-07 08:36:49:536 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:36:49:536 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /, 来路地址: 127.0.0.1
2018-10-07 08:36:49:536 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 08:36:49:536 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 08:36:49:537 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 08:36:49:537 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 08:36:49:703 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 08:36:49:703 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 08:36:49:704 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 08:36:49:704 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 08:36:49:705 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 08:36:49:705 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:36:49:707 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 08:36:49:707 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:36:49:708 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 08:36:49:708 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:36:49:709 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 08:36:49:709 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:36:49:939 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 08:36:49:940 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 08:36:49:942 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 08:36:49:943 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 08:36:50:142 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 08:36:50:225 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/bg-ico.png
2018-10-07 08:36:50:228 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/12.jpg
2018-10-07 08:36:50:231 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/15.jpg
2018-10-07 08:36:50:234 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 08:36:50:235 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 08:36:50:330 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 08:36:50:442 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/19.jpg
2018-10-07 08:36:50:482 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/1.jpg
2018-10-07 08:36:50:505 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 08:36:50:749 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/7.jpg
2018-10-07 08:36:50:750 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/2.jpg
2018-10-07 08:36:51:693 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/47
2018-10-07 08:36:51:693 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 08:36:51:693 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /article/47, 来路地址: 127.0.0.1
2018-10-07 08:36:51:694 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 08:36:51:694 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47]
2018-10-07 08:36:51:694 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-07 08:36:51:694 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [3, 47]
2018-10-07 08:36:51:732 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-07 08:36:51:732 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1538912026]
2018-10-07 08:36:51:733 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-07 08:36:51:733 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1538912026]
2018-10-07 08:36:51:735 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 08:36:51:735 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 0]
2018-10-07 08:36:51:735 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 08:36:51:735 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 0]
2018-10-07 08:36:51:736 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 08:36:51:736 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:36:51:737 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 08:36:51:737 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:36:51:738 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 08:36:51:738 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:36:51:738 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 08:36:51:738 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:56:10:554 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/36
2018-10-07 08:56:10:555 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-07 08:56:10:555 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /article/36, 来路地址: 127.0.0.1
2018-10-07 08:56:10:555 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 08:56:10:555 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [36]
2018-10-07 08:56:10:555 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-07 08:56:10:555 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [28, 36]
2018-10-07 08:56:10:610 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-07 08:56:10:610 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1526907133]
2018-10-07 08:56:10:611 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-07 08:56:10:611 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1526907133]
2018-10-07 08:56:10:614 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 08:56:10:614 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [36, 0]
2018-10-07 08:56:10:614 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 08:56:10:614 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [36, 0]
2018-10-07 08:56:10:615 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 08:56:10:615 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:56:10:615 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 08:56:10:615 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:56:10:617 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 08:56:10:617 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:56:10:617 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 08:56:10:617 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:58:03:954 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/47
2018-10-07 08:58:03:955 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-07 08:58:03:955 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /article/47, 来路地址: 127.0.0.1
2018-10-07 08:58:03:955 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 08:58:03:955 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47]
2018-10-07 08:58:03:956 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-07 08:58:03:956 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [4, 47]
2018-10-07 08:58:04:013 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-07 08:58:04:013 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1538912026]
2018-10-07 08:58:04:014 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-07 08:58:04:014 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1538912026]
2018-10-07 08:58:04:016 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 08:58:04:016 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 0]
2018-10-07 08:58:04:016 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 08:58:04:017 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 0]
2018-10-07 08:58:04:017 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 08:58:04:017 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:58:04:018 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 08:58:04:018 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:58:04:019 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 08:58:04:019 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:58:04:020 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 08:58:04:020 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:58:56:914 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/tag/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F
2018-10-07 08:58:56:915 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-07 08:58:56:915 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /tag/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F, 来路地址: 127.0.0.1
2018-10-07 08:58:56:916 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => select a.*, count(b.cid) as count from t_metas a left join `t_relationships` b on a.mid = b.mid where a.type = :p1 and a.name = :p2 group by a.mid
2018-10-07 08:58:56:916 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [tag, 内网穿透]
2018-10-07 08:58:56:916 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (select a.* from t_contents a left join t_relationships b on a.cid = b.cid where b.mid = :p1 and a.status = 'publish' and a.type = 'post') tmp
2018-10-07 08:58:56:916 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [34]
2018-10-07 08:58:56:917 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => select a.* from t_contents a left join t_relationships b on a.cid = b.cid where b.mid = :p1 and a.status = 'publish' and a.type = 'post' ORDER BY a.created desc LIMIT 0, 12
2018-10-07 08:58:56:917 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [34]
2018-10-07 08:58:56:920 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 08:58:56:920 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:58:56:921 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 08:58:56:921 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 08:58:56:922 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 08:58:56:922 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 08:58:56:923 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 08:58:56:923 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 09:01:51:236 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/tag/ngrok
2018-10-07 09:01:51:236 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-07 09:01:51:236 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /tag/ngrok, 来路地址: 127.0.0.1
2018-10-07 09:01:51:236 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => select a.*, count(b.cid) as count from t_metas a left join `t_relationships` b on a.mid = b.mid where a.type = :p1 and a.name = :p2 group by a.mid
2018-10-07 09:01:51:236 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [tag, ngrok]
2018-10-07 09:01:51:237 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (select a.* from t_contents a left join t_relationships b on a.cid = b.cid where b.mid = :p1 and a.status = 'publish' and a.type = 'post') tmp
2018-10-07 09:01:51:237 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [35]
2018-10-07 09:01:51:238 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => select a.* from t_contents a left join t_relationships b on a.cid = b.cid where b.mid = :p1 and a.status = 'publish' and a.type = 'post' ORDER BY a.created desc LIMIT 0, 12
2018-10-07 09:01:51:238 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [35]
2018-10-07 09:01:51:239 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 09:01:51:239 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 09:01:51:240 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 09:01:51:240 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 09:01:51:241 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 09:01:51:241 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 09:01:51:241 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 09:01:51:241 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 09:44:02:411 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/
2018-10-07 09:44:02:411 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
2018-10-07 09:44:02:411 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /, 来路地址: 127.0.0.1
2018-10-07 09:44:02:413 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 09:44:02:413 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 09:44:02:414 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 09:44:02:414 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 09:44:02:556 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 09:44:02:556 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 09:44:02:556 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 09:44:02:556 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 09:44:02:559 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 09:44:02:559 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 09:44:02:560 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 09:44:02:560 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 09:44:02:561 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 09:44:02:561 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 09:44:02:562 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 09:44:02:562 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 11:22:42:752 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/
2018-10-07 11:22:42:754 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; NetcraftSurveyAgent/1.0; +info@netcraft.com)
2018-10-07 11:22:42:754 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /, 来路地址: 127.0.0.1
2018-10-07 11:22:42:755 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 11:22:42:755 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 11:22:42:756 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 11:22:42:756 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 11:22:42:896 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 11:22:42:896 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 11:22:42:896 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 11:22:42:896 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 11:22:42:898 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 11:22:42:898 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 11:22:42:898 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 11:22:42:898 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 11:22:42:900 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 11:22:42:900 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 11:22:42:900 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 11:22:42:900 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 11:36:59:305 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/category/Java
2018-10-07 11:36:59:308 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-07 11:36:59:308 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /category/Java, 来路地址: 127.0.0.1
2018-10-07 11:36:59:315 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => select a.*, count(b.cid) as count from t_metas a left join `t_relationships` b on a.mid = b.mid where a.type = :p1 and a.name = :p2 group by a.mid
2018-10-07 11:36:59:315 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [category, Java]
2018-10-07 11:36:59:317 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (select a.* from t_contents a left join t_relationships b on a.cid = b.cid where b.mid = :p1 and a.status = 'publish' and a.type = 'post') tmp
2018-10-07 11:36:59:317 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [4]
2018-10-07 11:36:59:322 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => select a.* from t_contents a left join t_relationships b on a.cid = b.cid where b.mid = :p1 and a.status = 'publish' and a.type = 'post' ORDER BY a.created desc LIMIT 0, 12
2018-10-07 11:36:59:322 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [4]
2018-10-07 11:36:59:326 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 11:36:59:326 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 11:36:59:327 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 11:36:59:327 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 11:36:59:329 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 11:36:59:329 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 11:36:59:329 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 11:36:59:329 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 12:33:21:226 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/
2018-10-07 12:33:21:227 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 12:33:21:227 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /, 来路地址: 127.0.0.1
2018-10-07 12:33:21:228 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_users WHERE uid = :p1
2018-10-07 12:33:21:228 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [1]
2018-10-07 12:33:21:236 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 12:33:21:236 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 12:33:21:236 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 12:33:21:236 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 12:33:21:606 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 12:33:21:606 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 12:33:21:607 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 12:33:21:607 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 12:33:21:615 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 12:33:21:615 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 12:33:21:616 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 12:33:21:616 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 12:33:21:618 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 12:33:21:618 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 12:33:21:618 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 12:33:21:618 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 12:33:21:789 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 12:33:21:909 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 12:33:22:983 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery/3.2.1/jquery.min.js
2018-10-07 12:33:22:984 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 12:33:22:988 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 12:33:23:129 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 12:33:23:392 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/bg-ico.png
2018-10-07 12:33:23:393 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/12.jpg
2018-10-07 12:33:23:397 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/15.jpg
2018-10-07 12:33:23:555 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/2.jpg
2018-10-07 12:33:23:671 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/1.jpg
2018-10-07 12:33:23:672 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 12:33:23:673 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/7.jpg
2018-10-07 12:33:23:699 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 12:33:23:775 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 12:33:23:862 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 12:33:24:147 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/19.jpg
2018-10-07 12:33:24:882 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/47
2018-10-07 12:33:24:882 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 12:33:24:882 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /article/47, 来路地址: 127.0.0.1
2018-10-07 12:33:24:883 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 12:33:24:883 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47]
2018-10-07 12:33:24:883 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-07 12:33:24:883 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [5, 47]
2018-10-07 12:33:24:942 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-07 12:33:24:942 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1538912026]
2018-10-07 12:33:24:943 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-07 12:33:24:943 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1538912026]
2018-10-07 12:33:24:943 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 12:33:24:943 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 0]
2018-10-07 12:33:24:944 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 12:33:24:944 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 0]
2018-10-07 12:33:24:944 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 12:33:24:944 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 12:33:24:945 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 12:33:24:945 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 12:33:24:946 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 12:33:24:946 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 12:33:24:946 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 12:33:24:946 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 16:18:40:801 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/robots.txt
2018-10-07 16:18:40:802 WARN - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | Not Found	/robots.txt
2018-10-07 16:18:40:953 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/35
2018-10-07 16:18:40:953 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-07 16:18:40:953 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /article/35, 来路地址: 127.0.0.1
2018-10-07 16:18:40:955 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 16:18:40:955 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [35]
2018-10-07 16:18:40:958 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-07 16:18:40:958 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [31, 35]
2018-10-07 16:18:41:043 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-07 16:18:41:043 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1525926224]
2018-10-07 16:18:41:048 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-07 16:18:41:048 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1525926224]
2018-10-07 16:18:41:050 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 16:18:41:050 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [35, 0]
2018-10-07 16:18:41:050 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 16:18:41:050 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [35, 0]
2018-10-07 16:18:41:051 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 16:18:41:051 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 16:18:41:051 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 16:18:41:052 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 16:18:41:053 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 16:18:41:053 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 16:18:41:056 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 16:18:41:056 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 16:48:50:301 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/2
2018-10-07 16:48:50:301 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-07 16:48:50:301 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /article/2, 来路地址: 127.0.0.1
2018-10-07 16:48:50:302 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 16:48:50:302 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [2]
2018-10-07 16:48:50:302 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-07 16:48:50:302 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [140, 2]
2018-10-07 16:48:50:337 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-07 16:48:50:337 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1487861184]
2018-10-07 16:48:50:337 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-07 16:48:50:337 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1487861184]
2018-10-07 16:48:50:340 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 16:48:50:340 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [2, 0]
2018-10-07 16:48:50:341 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 16:48:50:341 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [2, 0]
2018-10-07 16:48:50:341 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE parent = :p1 ORDER BY coid ASC
2018-10-07 16:48:50:341 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [1]
2018-10-07 16:48:50:342 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE parent = :p1 ORDER BY coid ASC
2018-10-07 16:48:50:342 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [2]
2018-10-07 16:48:50:342 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 16:48:50:342 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [2, 0]
2018-10-07 16:48:50:343 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 16:48:50:343 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [2, 0]
2018-10-07 16:48:50:344 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE parent = :p1 ORDER BY coid ASC
2018-10-07 16:48:50:344 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [1]
2018-10-07 16:48:50:344 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE parent = :p1 ORDER BY coid ASC
2018-10-07 16:48:50:344 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [2]
2018-10-07 16:48:50:355 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE coid = :p1
2018-10-07 16:48:50:355 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [1]
2018-10-07 16:48:50:356 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 16:48:50:356 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 16:48:50:357 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 16:48:50:357 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 16:48:50:359 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 16:48:50:359 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 16:48:50:373 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 16:48:50:373 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 17:59:37:991 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/page/3
2018-10-07 17:59:37:991 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-07 17:59:37:991 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /page/3, 来路地址: 127.0.0.1
2018-10-07 17:59:37:992 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 17:59:37:992 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 17:59:37:992 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 24, 12
2018-10-07 17:59:37:992 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 17:59:38:088 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 17:59:38:088 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 17:59:38:089 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 24, 12
2018-10-07 17:59:38:089 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 17:59:38:090 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 17:59:38:090 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 17:59:38:091 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 17:59:38:091 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 17:59:38:093 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 17:59:38:093 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 17:59:38:093 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 17:59:38:093 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 19:53:07:620 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/
2018-10-07 19:53:07:622 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Java/1.8.0_121
2018-10-07 19:53:07:622 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /, 来路地址: 127.0.0.1
2018-10-07 19:53:07:626 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 19:53:07:626 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 19:53:07:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 19:53:07:630 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 19:53:07:792 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 19:53:07:792 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 19:53:07:792 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 19:53:07:792 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 19:53:07:794 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 19:53:07:794 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 19:53:07:794 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 19:53:07:794 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 19:53:07:796 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 19:53:07:796 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 19:53:07:796 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 19:53:07:796 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 22:27:47:571 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/
2018-10-07 22:27:47:571 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 22:27:47:571 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /, 来路地址: 127.0.0.1
2018-10-07 22:27:47:575 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_users WHERE uid = :p1
2018-10-07 22:27:47:575 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [1]
2018-10-07 22:27:47:584 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 22:27:47:584 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 22:27:47:585 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 22:27:47:585 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 22:27:47:737 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-07 22:27:47:737 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 22:27:47:737 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-07 22:27:47:737 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-07 22:27:47:742 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 22:27:47:742 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 22:27:47:743 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 22:27:47:743 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 22:27:47:745 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 22:27:47:745 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 22:27:47:746 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 22:27:47:746 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 22:27:48:053 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-07 22:27:48:073 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-07 22:27:48:203 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery/3.2.1/jquery.min.js
2018-10-07 22:27:48:340 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-07 22:27:48:370 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-07 22:27:48:505 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-07 22:27:48:730 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/bg-ico.png
2018-10-07 22:27:48:731 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/12.jpg
2018-10-07 22:27:48:733 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/15.jpg
2018-10-07 22:27:48:735 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/0k1fbv5hroi69rn69hkm2uqcsd.jpg
2018-10-07 22:27:48:737 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/r15sm8sfn6icnpqkidmdnkls7p.jpg
2018-10-07 22:27:48:740 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/19.jpg
2018-10-07 22:27:48:895 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/09/u50drqv3p6j61or1r5ero6881l.jpg
2018-10-07 22:27:49:150 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/2.jpg
2018-10-07 22:27:49:212 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/upload/2018/08/tpf09kqd10ga8ocvv34q11vrak.jpg
2018-10-07 22:27:49:235 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/7.jpg
2018-10-07 22:27:49:445 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/rand/1.jpg
2018-10-07 22:27:49:595 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/47
2018-10-07 22:27:49:596 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-07 22:27:49:596 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /article/47, 来路地址: 127.0.0.1
2018-10-07 22:27:49:596 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-07 22:27:49:597 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47]
2018-10-07 22:27:49:598 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-07 22:27:49:598 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [6, 47]
2018-10-07 22:27:49:649 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-07 22:27:49:649 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1538912026]
2018-10-07 22:27:49:651 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-07 22:27:49:651 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1538912026]
2018-10-07 22:27:49:653 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-07 22:27:49:653 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 0]
2018-10-07 22:27:49:654 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-07 22:27:49:654 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [47, 0]
2018-10-07 22:27:49:654 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 22:27:49:654 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 22:27:49:655 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 22:27:49:655 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 22:27:49:656 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 22:27:49:656 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 22:27:49:656 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 22:27:49:656 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 22:40:48:253 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/category/Java
2018-10-07 22:40:48:253 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-07 22:40:48:253 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /category/Java, 来路地址: 127.0.0.1
2018-10-07 22:40:48:257 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => select a.*, count(b.cid) as count from t_metas a left join `t_relationships` b on a.mid = b.mid where a.type = :p1 and a.name = :p2 group by a.mid
2018-10-07 22:40:48:257 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [category, Java]
2018-10-07 22:40:48:260 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (select a.* from t_contents a left join t_relationships b on a.cid = b.cid where b.mid = :p1 and a.status = 'publish' and a.type = 'post') tmp
2018-10-07 22:40:48:260 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [4]
2018-10-07 22:40:48:261 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => select a.* from t_contents a left join t_relationships b on a.cid = b.cid where b.mid = :p1 and a.status = 'publish' and a.type = 'post' ORDER BY a.created desc LIMIT 0, 12
2018-10-07 22:40:48:261 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [4]
2018-10-07 22:40:48:272 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-07 22:40:48:272 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 22:40:48:273 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-07 22:40:48:273 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-07 22:40:48:275 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-07 22:40:48:275 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-07 22:40:48:275 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-07 22:40:48:275 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 01:01:43:198 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/3
2018-10-08 01:01:43:199 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-08 01:01:43:199 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /article/3, 来路地址: 127.0.0.1
2018-10-08 01:01:43:200 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-08 01:01:43:200 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [3]
2018-10-08 01:01:43:201 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-08 01:01:43:201 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [382, 3]
2018-10-08 01:01:43:239 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-08 01:01:43:239 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1505643727]
2018-10-08 01:01:43:240 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-08 01:01:43:240 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1505643727]
2018-10-08 01:01:43:241 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-08 01:01:43:241 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [3, 0]
2018-10-08 01:01:43:242 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-08 01:01:43:242 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [3, 0]
2018-10-08 01:01:43:246 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE parent = :p1 ORDER BY coid ASC
2018-10-08 01:01:43:247 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [3]
2018-10-08 01:01:43:248 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-08 01:01:43:248 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [3, 0]
2018-10-08 01:01:43:248 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-08 01:01:43:248 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [3, 0]
2018-10-08 01:01:43:253 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE parent = :p1 ORDER BY coid ASC
2018-10-08 01:01:43:253 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [3]
2018-10-08 01:01:43:270 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-08 01:01:43:270 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 01:01:43:271 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-08 01:01:43:271 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 01:01:43:273 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-08 01:01:43:273 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 01:01:43:273 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-08 01:01:43:273 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 03:11:41:175 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/35
2018-10-08 03:11:41:175 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-08 03:11:41:175 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /article/35, 来路地址: 127.0.0.1
2018-10-08 03:11:41:176 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-08 03:11:41:176 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [35]
2018-10-08 03:11:41:177 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-08 03:11:41:177 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [32, 35]
2018-10-08 03:11:41:224 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-08 03:11:41:224 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1525926224]
2018-10-08 03:11:41:226 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-08 03:11:41:226 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1525926224]
2018-10-08 03:11:41:227 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-08 03:11:41:227 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [35, 0]
2018-10-08 03:11:41:227 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-08 03:11:41:227 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [35, 0]
2018-10-08 03:11:41:228 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-08 03:11:41:228 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 03:11:41:229 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-08 03:11:41:229 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 03:11:41:230 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-08 03:11:41:230 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 03:11:41:230 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-08 03:11:41:230 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 03:40:15:537 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/42
2018-10-08 03:40:15:537 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
2018-10-08 03:40:15:537 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /article/42, 来路地址: 127.0.0.1
2018-10-08 03:40:15:558 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-08 03:40:15:558 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [42]
2018-10-08 03:40:15:559 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-08 03:40:15:559 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [22, 42]
2018-10-08 03:40:15:620 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-08 03:40:15:620 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1534337610]
2018-10-08 03:40:15:621 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-08 03:40:15:621 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1534337610]
2018-10-08 03:40:15:622 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-08 03:40:15:622 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [42, 0]
2018-10-08 03:40:15:623 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-08 03:40:15:623 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [42, 0]
2018-10-08 03:40:15:623 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-08 03:40:15:623 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 03:40:15:624 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-08 03:40:15:624 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 03:40:15:624 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-08 03:40:15:625 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 03:40:15:625 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-08 03:40:15:625 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 03:40:15:710 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/xcode.min.css
2018-10-08 03:40:15:715 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/css/style.min.css
2018-10-08 03:40:15:741 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/static/admin/plugins/jquery/3.2.1/jquery.min.js
2018-10-08 03:40:15:764 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/headroom.min.js
2018-10-08 03:40:15:770 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/logo.png
2018-10-08 03:40:15:798 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/js/instantclick.min.js
2018-10-08 03:40:16:409 INFO - [ nio-worker@ thread-2 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/templates/themes/default/static/img/favicon.png
2018-10-08 04:11:41:210 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/page/3
2018-10-08 04:11:41:211 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-08 04:11:41:211 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /page/3, 来路地址: 127.0.0.1
2018-10-08 04:11:41:212 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-08 04:11:41:212 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-08 04:11:41:215 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 24, 12
2018-10-08 04:11:41:215 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-08 04:11:41:333 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-08 04:11:41:334 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-08 04:11:41:335 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 24, 12
2018-10-08 04:11:41:335 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-08 04:11:41:337 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-08 04:11:41:337 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 04:11:41:338 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-08 04:11:41:338 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 04:11:41:340 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-08 04:11:41:340 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 04:11:41:340 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-08 04:11:41:340 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 04:35:11:979 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/
2018-10-08 04:35:11:979 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: HTTP Banner Detection(security.ipip.net)
2018-10-08 04:35:11:979 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /, 来路地址: 127.0.0.1
2018-10-08 04:35:11:984 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-08 04:35:11:984 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-08 04:35:11:984 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-08 04:35:11:985 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-08 04:35:12:134 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-08 04:35:12:134 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-08 04:35:12:135 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-08 04:35:12:135 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-08 04:35:12:136 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-08 04:35:12:136 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 04:35:12:137 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-08 04:35:12:137 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 04:35:12:138 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-08 04:35:12:138 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 04:35:12:138 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-08 04:35:12:138 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 07:17:31:266 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/robots.txt
2018-10-08 07:17:31:270 WARN - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | Not Found	/robots.txt
2018-10-08 07:17:31:440 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/39
2018-10-08 07:17:31:445 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-08 07:17:31:445 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /article/39, 来路地址: 127.0.0.1
2018-10-08 07:17:31:448 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-08 07:17:31:448 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [39]
2018-10-08 07:17:31:452 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-08 07:17:31:452 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [27, 39]
2018-10-08 07:17:31:508 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-08 07:17:31:508 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1527391849]
2018-10-08 07:17:31:512 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-08 07:17:31:512 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1527391849]
2018-10-08 07:17:31:516 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-08 07:17:31:516 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [39, 0]
2018-10-08 07:17:31:517 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-08 07:17:31:517 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [39, 0]
2018-10-08 07:17:31:518 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-08 07:17:31:519 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 07:17:31:519 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-08 07:17:31:519 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 07:17:31:521 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-08 07:17:31:521 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 07:17:31:521 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-08 07:17:31:521 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 07:21:19:707 INFO - [ nio-worker@ thread-1 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/article/39
2018-10-08 07:21:19:707 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-08 07:21:19:707 INFO - [ nio-worker@ thread-1 ] c.t.h.BaseWebHook         | 用户访问地址: /article/39, 来路地址: 127.0.0.1
2018-10-08 07:21:19:711 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE cid = :p1
2018-10-08 07:21:19:711 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [39]
2018-10-08 07:21:19:713 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => UPDATE t_contents SET hits = :p1 WHERE cid = :p2
2018-10-08 07:21:19:713 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [28, 39]
2018-10-08 07:21:19:756 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created < :p3 ORDER BY created DESC LIMIT 1
2018-10-08 07:21:19:756 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1527391849]
2018-10-08 07:21:19:765 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 AND created > :p3 ORDER BY created ASC LIMIT 1
2018-10-08 07:21:19:765 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish, 1527391849]
2018-10-08 07:21:19:768 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2) tmp
2018-10-08 07:21:19:768 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [39, 0]
2018-10-08 07:21:19:768 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments WHERE cid = :p1 AND parent = :p2 ORDER BY coid desc LIMIT 0, 6
2018-10-08 07:21:19:768 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [39, 0]
2018-10-08 07:21:19:769 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-08 07:21:19:769 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 07:21:19:769 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-08 07:21:19:769 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 07:21:19:771 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-08 07:21:19:771 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 07:21:19:771 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-08 07:21:19:771 DEBUG - [ nio-worker@ thread-1 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 08:03:18:993 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/category/Java
2018-10-08 08:03:18:993 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-08 08:03:18:993 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /category/Java, 来路地址: 127.0.0.1
2018-10-08 08:03:18:995 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => select a.*, count(b.cid) as count from t_metas a left join `t_relationships` b on a.mid = b.mid where a.type = :p1 and a.name = :p2 group by a.mid
2018-10-08 08:03:18:995 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [category, Java]
2018-10-08 08:03:18:996 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (select a.* from t_contents a left join t_relationships b on a.cid = b.cid where b.mid = :p1 and a.status = 'publish' and a.type = 'post') tmp
2018-10-08 08:03:18:996 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [4]
2018-10-08 08:03:18:997 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => select a.* from t_contents a left join t_relationships b on a.cid = b.cid where b.mid = :p1 and a.status = 'publish' and a.type = 'post' ORDER BY a.created desc LIMIT 0, 12
2018-10-08 08:03:18:997 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [4]
2018-10-08 08:03:19:002 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-08 08:03:19:002 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 08:03:19:002 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-08 08:03:19:002 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 08:03:19:004 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-08 08:03:19:004 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 08:03:19:004 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-08 08:03:19:004 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 09:03:54:562 INFO - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | HTTP/1.0	GET	/robots.txt
2018-10-08 09:03:54:562 WARN - [ nio-worker@ thread-1 ] c.b.s.n.StaticFileHandler | Not Found	/robots.txt
2018-10-08 09:03:55:712 INFO - [ nio-worker@ thread-2 ] c.b.m.h.RequestExecution  | HTTP/1.0	GET	/
2018-10-08 09:03:55:712 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | UserAgent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
2018-10-08 09:03:55:712 INFO - [ nio-worker@ thread-2 ] c.t.h.BaseWebHook         | 用户访问地址: /, 来路地址: 127.0.0.1
2018-10-08 09:03:55:714 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-08 09:03:55:714 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-08 09:03:55:715 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-08 09:03:55:715 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-08 09:03:55:858 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE type = :p1 AND status = :p2) tmp
2018-10-08 09:03:55:858 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-08 09:03:55:859 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE type = :p1 AND status = :p2 ORDER BY created desc LIMIT 0, 12
2018-10-08 09:03:55:859 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [post, publish]
2018-10-08 09:03:55:861 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_contents WHERE status = :p1 AND type = :p2) tmp
2018-10-08 09:03:55:861 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 09:03:55:862 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_contents WHERE status = :p1 AND type = :p2 ORDER BY created desc LIMIT 0, 8
2018-10-08 09:03:55:862 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => [publish, post]
2018-10-08 09:03:55:863 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT COUNT(0) FROM (SELECT * FROM t_comments) tmp
2018-10-08 09:03:55:863 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
2018-10-08 09:03:55:863 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Execute SQL => SELECT * FROM t_comments ORDER BY created desc LIMIT 0, 8
2018-10-08 09:03:55:863 DEBUG - [ nio-worker@ thread-2 ] c.b.j.c.ActiveRecord      | ⬢ Parameters  => []
